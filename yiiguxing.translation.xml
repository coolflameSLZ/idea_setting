<application>
  <component name="AppStorage">
    <histories>
      <item value="Invocation" />
      <item value="Asynchronous execute the callback abnormally." />
      <item value="the reference count used for this connection. If equals 2, it means this connection has been referenced 2 times" />
      <item value="WRITE BUFFER WATER MARK" />
      <item value="Synchronized collection views. The returned synchronized collection views are serializable if the backing collection and the mutex are serializable. &lt;p&gt;If {@code null} is passed as the {@code mutex} parameter to any of this class's top-level methods or inner class constructors, the created object uses itself as the synchronization mutex. &lt;p&gt;This class should be used by other collection classes only. @author Mike Bostock @author Jared Levy" />
      <item value="Returns a synchronized (thread-safe) table backed by the specified table. In order to guarantee serial access, it is critical that &lt;b&gt;all&lt;b&gt; access to the backing table is accomplished through the returned table. &lt;p&gt;It is imperative that the user manually synchronize on the returned table when accessing any of its collection views: &lt;pre&gt;{@code Table&lt;R, C, V&gt; table = Tables.synchronizedTable(HashBasedTable.&lt;R, C, V&gt;create()); ... Map&lt;C, V&gt; row = table.row(rowKey); Needn't be in synchronized block ... synchronized (table) { Synchronizing on table, not row! Iterator&lt;Entry&lt;C, V&gt;&gt; i = row.entrySet().iterator(); Must be in synchronized block while (i.hasNext()) { foo(i.next()); } } }&lt;pre&gt; &lt;p&gt;Failure to follow this advice may result in non-deterministic behavior. &lt;p&gt;The returned table will be serializable if the specified table is serializable. @param table the table to be wrapped in a synchronized view @return a synchronized view of the specified table @since 22.0" />
      <item value="A collection that associates an ordered pair of keys, called a row key and a column key, with a single value. A table may be sparse, with only a small fraction of row key column key pairs possessing a corresponding value. &lt;p&gt;The mappings corresponding to a given row key may be viewed as a {@link Map} whose keys are the columns. The reverse is also available, associating a column with a row key value map. Note that, in some implementations, data access by column key may have fewer supported operations or worse performance than data access by row key. &lt;p&gt;The methods returning collections or maps always return views of the underlying table. Updating the table can change the contents of those collections, and updating the collections will change the table. &lt;p&gt;All methods that modify the table are optional, and the views returned by the table may or may not be modifiable. When modification isn't supported, those methods will throw an {@link UnsupportedOperationException}. &lt;p&gt;See the Guava User Guide article on &lt;a href= &quot;https:github.comgoogleguavawikiNewCollectionTypesExplainedtable&quot;&gt; {@code Table}&lt;a&gt;." />
      <item value="Implementation of {@code Table} whose iteration ordering across row keys is sorted by their natural ordering or by a supplied comparator. Note that iterations across the columns keys for a single row key may or may not be ordered, depending on the implementation. When rows and columns are both sorted, it's easier to use the {@link TreeBasedTable} subclass. &lt;p&gt;The {@link rowKeySet} method returns a {@link SortedSet} and the {@link rowMap} method returns a {@link SortedMap}, instead of the {@link Set} and {@link Map} specified by the {@link Table} interface. &lt;p&gt;Null keys and values are not supported. &lt;p&gt;See the {@link StandardTable} superclass for more information about the behavior of this class. @author Jared Levy" />
      <item value="Inactive" />
      <item value="extracted" />
      <item value="URL to your site's cookie policy" />
      <item value="Enable the lightGallery and Justified Gallery plugins" />
      <item value="gallery" />
      <item value="collapsed" />
      <item value="Whether show the rounded avatar image" />
      <item value="animations" />
      <item value="Whether to collapse sub-headings when they are out-of-view" />
      <item value="Whether to show the index of each heading" />
      <item value="Whether the sidebar sticks to the top when page scrolls" />
      <item value="Whether to show estimated article reading time" />
      <item value="highlight" />
      <item value="related" />
      <item value="corpus become an expression form of the word bag" />
      <item value="Remember passed id2word when you call, so before we know the correspondence between the numbers and output on output. Need to set up into how many topic" />
      <item value="corpora corpus model, models present LDA model, similarities similarity measurement model" />
      <item value="The worker sub-command must be specified in argv." />
      <item value="Kurtosis" />
      <item value="Skewness" />
      <item value="If completeEarly was true we still want to continue processing the queries to ensure we still put everything in the cache eventually." />
      <item value="necessary" />
      <item value="An IOException on a write is almost always due to the remote client aborting the request. Wrap this so that it can be handled better by the error dispatcher." />
      <item value="transpose" />
      <item value="payful" />
      <item value="source" />
      <item value="bias" />
      <item value="detach" />
      <item value="Synergy" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="33" />
        <entry key="ENGLISH" value="34" />
        <entry key="HINDI" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1628882974407" />
  </component>
</application>